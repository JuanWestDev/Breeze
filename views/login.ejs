<!DOCTYPE html>
<html lang="en">
   
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/login.css">
    <title>Login Page</title>
</head>
<body>
    <svg id="underwater-scene" xmlns="http://www.w3.org/2000/svg"></svg>
    <div class = "login-container">
        
        <div class = "login-box">
            <div class = "login-form">
                <h1>Sign into Breeze</h1>
                <form action="/login" method="POST" class="formL">
                    <input type="text" name="username" placeholder="Username" id = "username">
                    <input type="text" name="password" placeholder="Password" id = "password">
                    <!-- <button type ="submit"  aria-label="Log in">Log in</button> -->
                    <input type="submit" value="Log in" class="login-button">
                </form>
            </div>
        </div>
    </div>

    <!-- If anyone views this code the script for my login.ejs and the css for the script it does not belong to  me, it belongs to a developer named Shivani-->
    <script>
         const numFish = 50; // Number of fish
  const fishArray = [];
  const svg = document.getElementById('underwater-scene');
  
  let mouseX = window.innerWidth / 2;
  let mouseY = window.innerHeight / 2;

  // Track mouse movement
  document.addEventListener('mousemove', (event) => {
      mouseX = event.clientX;
      mouseY = event.clientY;
  });

  // Create fish and append them to the SVG as dots
  for (let i = 0; i < numFish; i++) {
      const fish = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      fish.setAttribute('fill', 'white');
      fish.setAttribute('r', '5');
      fish.style.filter = 'drop-shadow(0 0 10px rgba(255, 255, 255, 0.8))';
      svg.appendChild(fish);

      // Initial random positions and speeds for each fish
      fishArray.push({
          element: fish,
          x: Math.random() * window.innerWidth, // Random x position
          y: Math.random() * window.innerHeight, // Random y position
          speedX: Math.random() * 2 + 0.5, // Random horizontal speed
          speedY: Math.random() * 2 + 0.5, // Random vertical speed
          sway: Math.random() * 0.02 - 0.01, // Sway effect for more natural motion
          direction: Math.random() * Math.PI * 2, // Random direction
      });
  }

  function animateFish() {
      fishArray.forEach(fish => {
          // Move the fish in the direction of its speed
          fish.x += fish.speedX * Math.cos(fish.direction);
          fish.y += fish.speedY * Math.sin(fish.direction);

          // Apply some sway to create a more fluid movement
          fish.x += Math.sin(fish.direction) * fish.sway * 30;
          fish.y += Math.cos(fish.direction) * fish.sway * 20;

          // Change the direction slightly to mimic a more realistic motion
          fish.direction += fish.sway;

          // Make the fish "bounce" when hitting the screen edges
          if (fish.x > window.innerWidth || fish.x < 0) {
              fish.speedX = -fish.speedX;
          }
          if (fish.y > window.innerHeight || fish.y < 0) {
              fish.speedY = -fish.speedY;
          }

          // Fish will move slightly towards the mouse for interaction
          fish.x += (mouseX - fish.x) * 0.01;
          fish.y += (mouseY - fish.y) * 0.01;

          // Update the position of the fish on the screen
          fish.element.setAttribute('cx', fish.x);
          fish.element.setAttribute('cy', fish.y);
      });

      requestAnimationFrame(animateFish);
  }

  // Start the animation loop
  animateFish();
    </script>
</body>
</html>